{"version":3,"sources":["components/Header.js","components/Recipes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","search","onInputChange","onSearchClick","className","type","class","placeholder","aria-label","value","onChange","onClick","Recipes","recipes","map","recipe","src","image","label","ingredientLines","ingredient","App","useState","setSearch","setRecipes","useEffect","getRecipes","a","Axios","get","res","data","hits","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAyBeA,G,MAxBA,SAACC,GAAW,IACjBC,EAAyCD,EAAzCC,OAAQC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAC7B,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAIA,UAAU,YAAd,UAA0B,sBAAMA,UAAU,6BAAhB,sBAA1B,mBAGZ,sBAAKA,UAAU,2BAAf,UACE,uBAAOC,KAAK,OAAOC,MAAM,eAAeC,YAAY,wBACpDC,aAAW,uBACXC,MAAOR,EAAQS,SAAUR,IAEzB,qBAAKE,UAAU,qBAAf,SACE,wBAAQA,UAAU,eAAeO,QAAUR,EAA3C,qCCmBWS,EA/BC,SAACZ,GAAW,IACjBa,EAAWb,EAAXa,QACP,OACI,qBAAKT,UAAU,eAAf,SAEQS,EAAQC,KAAI,SAAAC,GAAM,OAEV,sBAAKX,UAAU,wBAAf,UACI,qBAAKY,IAAKD,EAAOA,OAAOE,MAAOb,UAAU,0CACzC,qBAAKA,UAAU,YAAf,SACI,6BACKW,EAAOA,OAAOG,UAIvB,oBAAId,UAAU,8BAAd,SAEQW,EAAOA,OAAOI,gBAAgBL,KAAI,SAAAM,GAAU,OAAI,oBAAIhB,UAAU,kBAAd,SAAkCgB,kB,iBC6BvGC,EAzCH,WAAO,IAAD,EAGaC,mBAAS,UAHtB,mBAGRrB,EAHQ,KAGAsB,EAHA,OAIeD,mBAAS,IAJxB,mBAIRT,EAJQ,KAICW,EAJD,KASdC,qBAAU,WACLC,MAEF,IAEH,IAAMA,EAAU,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IAAN,0CAA6C5B,EAA7C,mBATR,WASQ,oBARR,qCAOK,OACT6B,EADS,OAEfN,EAAWM,EAAIC,KAAKC,MAFL,2CAAH,qDAehB,OACI,sBAAK5B,UAAU,MAAf,UACI,cAAC,EAAD,CAAQH,OAAQA,EAChBC,cAZc,SAAC+B,GAEnBV,EAAUU,EAAEC,OAAOzB,QAWfN,cARc,WAClBuB,OASI,qBAAKtB,UAAU,YAAf,SACC,cAAC,EAAD,CAAQS,QAASA,UC/BfsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.810ad53d.chunk.js","sourcesContent":["import React from \"react\"\r\nconst Header = (props) => {\r\n    const{search, onInputChange, onSearchClick } = props\r\n    return(\r\n        <div className=\"jumbotron\">\r\n            <h1 className=\"display-1\"><span className=\"material-icons brand__icon\">\r\nfastfood\r\n</span>Food Recipes </h1>\r\n<div className=\"input-group w-50 mx-auto\">\r\n  <input type=\"text\" class=\"form-control\" placeholder=\"Seacrh Your Recipe...\" \r\n  aria-label=\"Recipient's username\" \r\n  value={search} onChange={onInputChange} />\r\n\r\n  <div className=\"input-group-append\">\r\n    <button className=\"btn btn-dark\" onClick={ onSearchClick } >Search Recipe</button>\r\n  </div>\r\n</div>\r\n </div>\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Header;","import React from \"react\"\r\n\r\nconst Recipes = (props) => {\r\n    const {recipes} = props\r\n    return(\r\n        <div className=\"card-columns\">\r\n            {\r\n                recipes.map(recipe => (\r\n                 \r\n                        <div className=\"card py-2 text-center\">\r\n                            <img src={recipe.recipe.image} className=\"img-fluid w-50 mx-auto rounded-circle\" />\r\n                            <div className=\"card-body\">\r\n                                <h5>\r\n                                    {recipe.recipe.label}\r\n                                </h5>\r\n\r\n                            </div>\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {\r\n                                    recipe.recipe.ingredientLines.map(ingredient => <li className=\"list-group-item\" >{ingredient}</li>)\r\n                                }\r\n\r\n                            </ul>\r\n                        </div>\r\n\r\n                 \r\n\r\n\r\n                 ) )\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Recipes","import React, {useState, useEffect} from \"react\";\r\nimport \"./App.css\"\r\nimport Header from \"./components/Header\"\r\nimport Recipe from \"./components/Recipes\"\r\nimport Axios from 'axios'\r\n\r\n\r\nconst App = () => {\r\n    \r\n\r\n    const[search, setSearch] = useState(\"chiken\")\r\n    const[recipes, setRecipes] = useState([])\r\n\r\n    const APP_ID =\"eb5fba07\"\r\n    const APP_KEY=\"f5898751a99f9d870ec1912c12a53f7b\"\r\n\r\n    useEffect(() => {\r\n         getRecipes()\r\n        \r\n    }, [])\r\n\r\n    const getRecipes = async () =>{\r\n        const res = await Axios.get(`https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}`)\r\n        setRecipes(res.data.hits)\r\n\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setSearch(e.target.value)\r\n        \r\n    }\r\n    const onSearchClick = () =>{\r\n        getRecipes()\r\n    }\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <Header search={search} \r\n            onInputChange={onInputChange}\r\n            onSearchClick={onSearchClick}/>\r\n           \r\n            <div className=\"container\">   \r\n             <Recipe recipes={recipes} />\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}